-- MySQL Script generated by MySQL Workbench
-- Thu Mar  2 14:46:04 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema elite-motion
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema elite-motion
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `elite-motion` DEFAULT CHARACTER SET utf8 ;
USE `elite-motion` ;

-- -----------------------------------------------------
-- Table `elite-motion`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `elite-motion`.`users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `mail` VARCHAR(100) NOT NULL,
  `password` VARCHAR(200) NOT NULL,
  `firstname` VARCHAR(45) NULL,
  `lastname` VARCHAR(45) NULL,
  `birthdate` VARCHAR(45) NULL,
  `profile_picture` VARCHAR(500) NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `mail_UNIQUE` (`mail` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `elite-motion`.`health_informations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `elite-motion`.`health_informations` (
  `health_information_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `value` VARCHAR(45) NULL,
  `unit` VARCHAR(45) NULL,
  `users_user_id` INT NOT NULL,
  PRIMARY KEY (`health_information_id`, `users_user_id`),
  INDEX `fk_health_informations_users_idx` (`users_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_health_informations_users`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `elite-motion`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `elite-motion`.`sports_programs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `elite-motion`.`sports_programs` (
  `sports_program_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `is_active` TINYINT(0) NULL,
  `users_user_id` INT NOT NULL,
  PRIMARY KEY (`sports_program_id`, `users_user_id`),
  INDEX `fk_sports_programs_users1_idx` (`users_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_sports_programs_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `elite-motion`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `elite-motion`.`training_sessions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `elite-motion`.`training_sessions` (
  `training_session_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`training_session_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `elite-motion`.`exercices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `elite-motion`.`exercices` (
  `exercice_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `description` VARCHAR(500) NULL,
  `reps` INT NULL,
  `sets` INT NULL,
  PRIMARY KEY (`exercice_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `elite-motion`.`training_sessions_group_exercices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `elite-motion`.`training_sessions_group_exercices` (
  `training_sessions_training_session_id` INT NOT NULL,
  `exercices_exercice_id` INT NOT NULL,
  PRIMARY KEY (`training_sessions_training_session_id`, `exercices_exercice_id`),
  INDEX `fk_training_sessions_has_exercices_exercices1_idx` (`exercices_exercice_id` ASC) VISIBLE,
  INDEX `fk_training_sessions_has_exercices_training_sessions1_idx` (`training_sessions_training_session_id` ASC) VISIBLE,
  CONSTRAINT `fk_training_sessions_has_exercices_training_sessions1`
    FOREIGN KEY (`training_sessions_training_session_id`)
    REFERENCES `elite-motion`.`training_sessions` (`training_session_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_training_sessions_has_exercices_exercices1`
    FOREIGN KEY (`exercices_exercice_id`)
    REFERENCES `elite-motion`.`exercices` (`exercice_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `elite-motion`.`sports_programs_contain_training_sessions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `elite-motion`.`sports_programs_contain_training_sessions` (
  `sports_programs_sports_program_id` INT NOT NULL,
  `sports_programs_users_user_id` INT NOT NULL,
  `training_sessions_training_session_id` INT NOT NULL,
  PRIMARY KEY (`sports_programs_sports_program_id`, `sports_programs_users_user_id`, `training_sessions_training_session_id`),
  INDEX `fk_sports_programs_has_training_sessions_training_sessions1_idx` (`training_sessions_training_session_id` ASC) VISIBLE,
  INDEX `fk_sports_programs_has_training_sessions_sports_programs1_idx` (`sports_programs_sports_program_id` ASC, `sports_programs_users_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_sports_programs_has_training_sessions_sports_programs1`
    FOREIGN KEY (`sports_programs_sports_program_id` , `sports_programs_users_user_id`)
    REFERENCES `elite-motion`.`sports_programs` (`sports_program_id` , `users_user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sports_programs_has_training_sessions_training_sessions1`
    FOREIGN KEY (`training_sessions_training_session_id`)
    REFERENCES `elite-motion`.`training_sessions` (`training_session_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
